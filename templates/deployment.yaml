apiVersion: v1
kind: Template
metadata:
  name: local-provisioner
parameters:
  - name: NAMESPACE
    default: "local-provisioner"
  - name: IMAGE_REGISTRY
    default: "image-registry.openshift-image-registry.svc:5000"
  - name: IMAGE_NAME
    default: "default/local-provisioner"
  - name: IMAGE_TAG
    default: "latest"
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: local-provisioner
      namespace: ${NAMESPACE}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: local-provisioner
      template:
        metadata:
          labels:
            app: local-provisioner
        spec:
          serviceAccountName: local-provisioner
          volumes:
          - name: data
            hostPath:
              path: /mnt/data
              type: DirectoryOrCreate
          containers:
          - name: local-provisioner
            image: ${IMAGE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            command:
            - /usr/local/bin/local-provisioner
            securityContext:
              privileged: true
              allowPrivilegeEscalation: true
              capabilities:
                drop: []
              runAsUser: 0
              seccompProfile:
                type: Unconfined
            volumeMounts:
            - name: data
              mountPath: /mnt/data
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: local-provisioner
      namespace: ${NAMESPACE}
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: local-provisioner
    rules:
    - apiGroups: [""]
      resources: ["events"]
      verbs: ["create"]
    - apiGroups: [""]
      resources: ["persistentvolumeclaims"]
      verbs: ["list", "watch", "update"]
    - apiGroups: [""]
      resources: ["persistentvolumes"]
      verbs: ["list", "watch", "create", "delete"]
    - apiGroups: ["storage.k8s.io"]
      resources: ["storageclasses"]
      verbs: ["get", "watch"]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: local-provisioner-binding
    subjects:
    - kind: ServiceAccount
      name: local-provisioner
      namespace: ${NAMESPACE}
    roleRef:
      kind: ClusterRole
      name: local-provisioner
      apiGroup: rbac.authorization.k8s.io
